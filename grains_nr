*&---------------------------------------------------------------------*
*& Report Z_SCHACH_AUFGABE
*&---------------------------------------------------------------------*
*& Introduction
* There once was a wise servant who saved the life of a prince. 
* The king promised to pay whatever the servant could dream up. Knowing that the king loved chess, 
* the servant told the king he would like to have grains of wheat. One grain on the first
* square of a chessboard, WITH the number of grains doubling ON each successive square.

* Instructions
* Calculate the number of grains of wheat on a chessboard.

* A chessboard has 64 squares. Square 1 has one grain, square 2 has two grains, square 3 has four grains, and so on, doubling each time.

* Write code that calculates:

* the number of grains on a given square
* the total number of grains on the chessboard
*&---------------------------------------------------------------------*
REPORT z_schach_aufgabe.

CLASS zcl_grains DEFINITION

  FINAL
 .

  PUBLIC SECTION.
    TYPES type_result TYPE p LENGTH 16 DECIMALS 0.
    METHODS square
      IMPORTING
        input         TYPE i
      RETURNING
        VALUE(result) TYPE type_result
      RAISING
        cx_parameter_invalid.
    METHODS total
      RETURNING
        VALUE(result) TYPE type_result.

  PROTECTED SECTION.
  PRIVATE SECTION.

ENDCLASS.


CLASS zcl_grains IMPLEMENTATION.
  METHOD square.
    IF input <= 0 OR input > 64.
      RAISE EXCEPTION TYPE cx_parameter_invalid.
    ENDIF.
    result = 2 ** ( input - 1 ).

  ENDMETHOD.

  METHOD total.
    result = 2 ** 64 - 1.
  ENDMETHOD.

ENDCLASS.

START-OF-SELECTION.
  DATA(result) = NEW zcl_grains( )->square( input = 6 ).
  WRITE: / result.
  DATA(result_sum) = NEW zcl_grains( )->total( ).
  WRITE: / result_sum.
