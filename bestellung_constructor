REPORT zadr_bestellung_constr.

CLASS lcl_bestellung DEFINITION.
  PUBLIC SECTION.
    METHODS constructor IMPORTING iv_start_benr TYPE i iv_start_betrag TYPE i.
    METHODS get_bestellnr RETURNING VALUE(rv_bestellnr) TYPE i.
    METHODS get_betrag RETURNING VALUE(rv_betrag) TYPE i.
    METHODS set_betrag IMPORTING iv_betrag TYPE i.
    METHODS add_position IMPORTING iv_position TYPE i.

  PRIVATE SECTION.
    DATA: gv_bestellnr TYPE i,
          gv_betrag    TYPE i.
ENDCLASS.

CLASS lcl_bestellung IMPLEMENTATION.
  METHOD constructor.
    me->gv_bestellnr = iv_start_benr.
    IF iv_start_betrag < 0.
      me->gv_betrag = 0.
    ELSE.
      me->gv_betrag = iv_start_betrag.
    ENDIF.
  ENDMETHOD.

  METHOD get_bestellnr.
    rv_bestellnr =  me->gv_bestellnr.
  ENDMETHOD.

  METHOD get_betrag.
    rd_betrag = me->gd_betrag.
  ENDMETHOD.

  METHOD set_betrag.
    IF id_betrag < 0.
      me->gd_betrag = 0.
    ELSE.
      me->gd_betrag = id_betrag.
    ENDIF.
  ENDMETHOD.

  METHOD add_position.
    me->gd_betrag = gd_betrag + id_position.
  ENDMETHOD.

ENDCLASS.

START-OF-SELECTION.

  DATA(lo_bestell) = NEW lcl_bestellung( id_start_betrag = 200 id_start_benr = 10001 ).
  WRITE: /  'Start Bestellungnr und Betrag nach constructor: ', lo_bestell->get_betrag( ), lo_bestell->get_bestellnr( ).

  lo_bestell->add_position( 50 ).
  WRITE: / 'Nach add position 50:', lo_bestell->get_betrag( ).

  lo_bestell->set_betrag( 500 ).
  WRITE: / 'Nach set betrag 500:', lo_bestell->get_betrag( ).

  lo_bestell->set_betrag( -10 ).
  WRITE: / 'Nach set betrag -10: ', lo_bestell->get_betrag( ).
